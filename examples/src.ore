def p(msg String) Void {
	print_string_length(msg, strlen(msg))
}

def p(num Int) Void {
	print(num)
}

def p(ptr *Int) Void {
	print(*ptr)
}

def take_void(msg String, v Void) Void {
	p(msg)
}

struct Test {
	a Int
	next *Test
}

def main() Int {
	let val = newstruct Test {}
	val.a = 100
	p(val.a)

	let p2 = p
	let arr = [1, 2, 3]
	let ptr = &arr[0]
	p2(*ptr)

	let addr = cast<Int>(ptr)
	p2(addr)

	let ptr_two = cast<*Int>(addr + 8)
	p2(*ptr_two)
	0
}
